static String countLuck(String[] matrix, int k) {
        int[] xy = new int[2];
        int maxX = matrix[0].length();
        int maxY = matrix.length-1;
        
        for(int i=0 ; i<matrix.length ; i++){
            for(int m=0 ; m<matrix[0].length() ; m++){
                String temp = matrix[i].substring(m,m+1);
                if(temp.equals("M")){
                    xy[0] = i;
                    xy[1] = m;
                    break;
                }
            }
        }
        for(int i=0; i <matrix.length ; i++){
               System.out.println(matrix[i]);
            }
            System.out.println(" ");
        
        
        
        
        int btCount=0;
        int[][] xyBT = new int[1000][3];
        xyBT[0][2]=0;
        
        
        
        int dC = 0;
        while(!matrix[xy[0]].substring(xy[1],xy[1]+1).equals("*")){
            
            if(dC==700){
                for(int i=0; i <matrix.length ; i++){
                    System.out.println(matrix[i]);
                }
                 System.out.println(" ");
            }
            dC++;
            
            String above = "na";
            String right= "na";
            String below= "na";
            String left= "na";

            //one above
            if((xy[0]-1) >=0){
                above = matrix[xy[0]-1].substring(xy[1],xy[1]+1);         
            }

            //one right
            if((xy[1]+1)<maxX){ 
                right = matrix[xy[0]].substring(xy[1]+1,xy[1]+2); 
            }

            //one below
            if((xy[0]+1) <= maxY){          
                below = matrix[xy[0]+1].substring(xy[1],xy[1]+1);  
            }

             //one left
            if((xy[1]-1) >=0){
                left = matrix[xy[0]].substring(xy[1]-1,xy[1]);           
            }

            int countPos=0;
            if(above.equals(".")){
                countPos++;
            }
            if(right.equals(".")){
                countPos++;
            }
            if(below.equals(".")){
                countPos++;
            }
            if(left.equals(".")){
                countPos++;
            }
            //~~~~~~~~~~~~~~~~~~~~~~~
            boolean bool = true;
            if(above.equals("*")){
                bool=false;
                xy[0] = xy[0]-1;
            }else
            if(right.equals("*")){
                bool=false;
                xy[1] = xy[1]+1 ;
            }else
            if(below.equals("*")){
                bool=false;
                xy[0] = xy[0]+1;
            }else
            if(left.equals("*")){
                bool=false;
                xy[1] = xy[1]-1;
            }
            if(!bool){
                if(above.equals(".")){
                    xyBT[btCount][2]++;
            }else if(right.equals(".")){
                    xyBT[btCount][2]++;
            }else if(below.equals(".")){
                    xyBT[btCount][2]++;
            }else if(left.equals(".")){
                    xyBT[btCount][2]++;
                }
            }
            
            
            
        
            if(countPos==1 && bool){
                if(above.equals(".")){
                    xy[0] = xy[0]-1;
                }else if(right.equals(".")){
                    xy[1] = xy[1]+1 ;
                }else if(below.equals(".")){
                    xy[0] = xy[0]+1;
                }else if(left.equals(".")){
                    xy[1] = xy[1]-1;
                }
                String newString = matrix[xy[0]];
                newString =matrix[xy[0]].substring(0,xy[1])+"O"+matrix[xy[0]].substring(xy[1]+1);
                matrix[xy[0]]=newString;
            }else if(countPos > 1 && bool){
                //only works if there is one backtrack
                if(!(matrix[xy[0]].substring(xy[1],xy[1]+1)).equals("N")){
                    xyBT[btCount][2]++;
                    //System.out.println("here ^^^");
                }
                xyBT[btCount+1][2]= xyBT[btCount][2];
            
                
                xyBT[btCount][0]=xy[0];
                xyBT[btCount][1]=xy[1];
                btCount++;
                
                if(above.equals(".")){
                    xy[0] = xy[0]-1;
                }else if(right.equals(".")){
                    xy[1] = xy[1]+1 ;
                }else if(below.equals(".")){
                    xy[0] = xy[0]+1;
                }else if(left.equals(".")){
                    xy[1] = xy[1]-1;
                }
                String newString = matrix[xy[0]];
                newString=matrix[xy[0]].substring(0,xy[1])+"O"+matrix[xy[0]].substring(xy[1]+1);
                matrix[xy[0]]=newString;
                
            }else if(countPos==0 && bool){
                btCount--;
                xy[0]=xyBT[btCount][0];
                xy[1]=xyBT[btCount][1];
                
                String newString = matrix[xy[0]];
                newString=matrix[xy[0]].substring(0,xy[1])+"N"+matrix[xy[0]].substring(xy[1]+1);
                matrix[xy[0]]=newString;
            }
            
            for(int i=0; i <matrix.length ; i++){
               //System.out.println(matrix[i]);
            }
           //System.out.println(" ");
            
            
        }
        
        
        
        
        System.out.println(xyBT[btCount][2] + " " + k);
        System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
        
        if(k==xyBT[btCount][2]){
            return "Impressed";
        }else{
            return "Oops!";
        }
    }

